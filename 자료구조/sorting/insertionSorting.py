list = [4, 5, 6, 2, 3, 5, 1, 7, 8, 9, 0]


def insertionSroting(list):
    for i in range(1, len(list)):  # 리스트의 두번째 요소부터 시작합니다
        key = list[i]  # 현재 이동시키려는 값을 키에 저장
        j = i - 1  # 이동시키려는 값을 전에 있는 값들과 비교하기 위해서 사용하는 인덱스 값인데 키값보다 인덱스가 하나 작게 설정됨

        # 포문 내부의 와일 문을 사용하는데 이를 j 가 0 일때까지 그리고 key값보다 큰 값보다 작은 값이 있을 때 까지 실행한다.
        # 키 값보다 작은 갑이 존재한다면 바로 그 값 바로 앞에 삽입한다.
        while j >= 0 and list[j] > key:
            list[j + 1] = list[j]
            # 키값보다 큰값들이 위치하면 이를 하나씩 앞으로 옮긴다.
            j -= 1
            # 마지막가지 비교하면 내려가기위해서 인덱스 값을 감소기켜 주었다.
        list[j + 1] = key
        # 와일문이 종료되고 나면 발견한 키 값보다 작은값의 바로 앞에 인덱스보다 하나 바로 앞에 키값을 삽입하기 위해서 j+1의 인덱스에 키 값을 삽입한다.
        print("%d 번째 실행한결과 " % (i + 1), list)
        return list


print(list)
print(insertionSroting(list))
